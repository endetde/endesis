<?php
/**
**********************************************************
Nombre de la Clase:	    CustomDBSeguridad
Propósito:				es la interfaz del modelo del modulo de seguridad
                        todos los metodos existentes pasan por aqui
Fecha de Creación:		08 - 02 - 07
Versión:				1.0.0
Autor:					Anacleto Rojas Veizaga
**********************************************************
*/
class arv_cls_CustomDBSeguridad
{
	//variable que contiene la salida de la ejecución de la función
	//si la función tuvo error (false), salida contendrá el mensaje de error
	//si la función no tuvo error (true), salida contendrá el resultado, ya sea un conjunto de datos o un mensaje de confirmación
	var $salida = "";

	//Variable que contedrá la cadena de llamada a las funciones postgres
	var $query = "";
	
	//Bandera que indica si los datos se decodificarán o no
	var $decodificar = false;


	function __construct()
	{
		include_once("../../../lib/lib_modelo/cls_middle.php");
		
		include_once("cls_DBUsuario.php");
		include_once("cls_DBUsuarioRol.php");
		include_once("cls_DBParametroGeneral.php");	
		include_once ("cls_DBAsignacionEstructura.php");	
					
		include_once("cls_DBPermiso.php");
		
		//include_once("cls_DBSubsistema.php");
	
	}	

	///////////////USUARIOS /////////////////////  
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $usuario
	 * @param unknown_type $contrasenia
	 * @param unknown_type $ip_origen
	 * @param unknown_type $mac_maquina
	 * @return unknown
	 */
	function VerificaUsuario($usuario,$contrasenia,$ip_origen,$mac_maquina)
	{
		$this->salida = "";
		
		$dbUsuario = new cls_DBUsuario();
		$res = $dbUsuario -> VerificaUsuario($usuario,$contrasenia,$ip_origen,$mac_maquina);
		$this->salida = $dbUsuario->salida;
		return $res;
	}
	
	//*********************************************************************	
	/**
	 * Enter description here...
	 *
	 * @return unknown
	 */
	function CuentaListaPaginadaUsuarios()
	{
		$dbUsuario = new cls_DBUsuario();
		$res = $dbUsuario -> CuentaListaPaginadaUsuarios();
		return $res;
	}	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @param unknown_type $sortCol
	 * @param unknown_type $sortDir
	 * @param unknown_type $filterCol
	 * @param unknown_type $filterValue
	 * @return unknown
	 */
	function  ListaPaginadaUsuarioParametrizada($cant=-1,$puntero=0,$sortCol="id_usuario",$sortDir="asc",$filterCol="nombre",$filterValue="")
	{
		$dbUsuario = new cls_DBUsuario();
		$res = $dbUsuario -> ListaPaginadaUsuarioParametrizada($cant,$puntero,$sortCol,$sortDir,$filterCol,$filterValue);
		return $res;
	}	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @return unknown
	 */
	function ListaPaginadaUsuario($cant,$puntero)
	{
		$dbUsuario = new cls_DBUsuario();
		$res = $dbUsuario -> ListaPaginadaUsuario($cant,$puntero);
		return $res;
	}
	/**********************************************************************
	 * 
	 *
	 * @param unknown_type $id_usuario
	 * @return unknown
	 */
	function EliminarUsuario ($id_usuario)
	{
					
		$this->salida = "";
		$dbUsuario= new cls_DBUsuario($this->decodificar);
		$res = $dbUsuario -> EliminarUsuario($id_usuario);
		$this->salida = $dbUsuario->salida;
		$this->query = $dbUsuario->query;
		return $res;
	}
		
	
	function InsertarUsuario($id_usuario,$id_persona,$login,$contrasenia,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modicficacion,$estado_usuario,$estilo_usuario,$filtro_avanzado)
	{
		$this->salida = "";
		$dbUsuario = new cls_DBUsuario($this->decodificar);
		$res = $dbUsuario->InsertarUsuario($id_usuario,$id_persona,$login,$contrasenia,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modicficacion,$estado_usuario,$estilo_usuario,$filtro_avanzado);
		$this->salida = $dbUsuario->salida;
		$this->query = $dbUsuario->query;
		return $res;
		
		
	}
	
	function ModificarUsuario($id_usuario,$id_persona,$login,$contrasenia,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modicficacion,$estado_usuario,$estilo_usuario,$filtro_avanzado)
	{
		$this->salida = "";
		$dbUsuario= new cls_DBUsuario($this->decodificar);
		$res = $dbUsuario->ModificarParametroGeneral($id_usuario,$id_persona,$login,$contrasenia,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modicficacion,$estado_usuario,$estilo_usuario,$filtro_avanzado);
		$this->salida = $dbUsuario->salida;
		$this->query = $dbUsuario->query;
		return $res;
	}	
	
	function ListarUsuario($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad)
	{
		$this->salida = "";
		$dbUsuario= new cls_DBUsuario($this->decodificar);
		$res = $dbUsuario->ListarUsuario($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad);
		$this->salida = $dbUsuario->salida;
		$this->query = $dbUsuario->query;
		return $res;
	}
	function ContarUsuario($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad)
	{
		$this->salida = "";
		$dbUsuario= new cls_DBUsuario($this->decodificar);
		$res = $dbUsuario->ContarUsuario($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad);
		$this->salida = $dbUsuario->salida;
		$this->query = $dbUsuario->query;
		return $res;
	}

	function ValidarUsuario($operacion_sql,$id_usuario,$id_persona,$login,$contrasenia,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modificacion,$estado_usuario,$estilo_usuario,$filtro_avanzado)
	{
		$this->salida = "";
		$dbUsuario= new cls_DBUsuario($this->decodificar);
		$res = $dbUsuario ->ValidarUsuario($operacion_sql,$id_usuario,$id_persona,$login,$contrasenia,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modificacion,$estado_usuario,$estilo_usuario,$filtro_avanzado);
		$this->salida = $dbUsuario->salida;
		$this->query = $dbUsuario->query;
		return $res;
	}
	
	/********************************************************************/
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_rol
	 * @return unknown
	 */
	function CuentaUsuariosDelRol($id_rol)
	{
		$dbUsuario = new cls_DBUsuario();
		$res = $dbUsuario ->CuentaUsuariosDelRol($id_rol);
		return $res;
	}

	/////////////FIN USUARIOS /////////////////////////////

	///////// LOG ///////////////
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_usuario
	 * @param unknown_type $modulo
	 * @param unknown_type $proceso
	 * @param unknown_type $fecha
	 * @param unknown_type $hora
	 * @param unknown_type $accion
	 * @param unknown_type $ip_origen
	 * @return unknown
	 */
	function CrearLog ($id_usuario,$modulo,$proceso, $fecha,$hora,$accion, $ip_origen)
	{
		$dbLog = new DBLog();
		$res = $dbLog -> CrearLog ($id_usuario,$modulo,$proceso, $fecha,$hora,$accion, $ip_origen);
		return $res;
	}

	///////// FIN LOG ///////////

	///////////PERMISOS////////////
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $rol
	 * @param unknown_type $modulo
	 * @param unknown_type $proceso
	 * @param unknown_type $operacion
	 * @return unknown
	 */
	function VerificaPermiso($rol,$modulo,$proceso,$operacion)
	{
		$dbPermiso = new DBPermiso();
		$resultado = $dbPermiso -> VerificaPermiso($rol,$modulo,$proceso,$operacion);
		return $resultado;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $rol
	 * @return unknown
	 */
	function ListaPermiso($usuario,$id_rol,$ip_origen,$mac_maquina)
	{
		$this->salida = "";
		$dbPermiso = new cls_DBPermiso();
		$res = $dbPermiso -> ListaPermiso($usuario,$id_rol,$ip_origen,$mac_maquina);
		//$res = $dbPermiso -> ListaPermiso($usuario,$ip_origen,$mac_maquina);
		$this->salida = $dbPermiso->salida;
		return $res;
	}
	
	function ListaPermisoArb($usuario,$id_rol,$ip_origen,$mac_maquina,$nivel,$id_metaproceso_padre)
	{
		$this->salida = "";
		$dbPermiso = new cls_DBPermiso();
		$res = $dbPermiso -> ListaPermisoArb($usuario,$id_rol,$ip_origen,$mac_maquina,$nivel,$id_metaproceso_padre);
		//$res = $dbPermiso -> ListaPermiso($usuario,$ip_origen,$mac_maquina);
		$this->salida = $dbPermiso->salida;
		return $res;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_rol
	 * @param unknown_type $id_proceso
	 * @param unknown_type $id_modulo
	 * @param unknown_type $insertar
	 * @param unknown_type $eliminar
	 * @param unknown_type $modificar
	 * @param unknown_type $ver
	 * @param unknown_type $extra
	 * @return unknown
	 */
	function  CrearPermiso ($id_rol,$id_proceso,$id_modulo,$insertar,$eliminar,$modificar,$ver,$extra)
	{
		$dbPermiso = new DBPermiso();
		$permisos = $dbPermiso ->  CrearPermiso ($id_rol,$id_proceso,$id_modulo,$insertar,$eliminar,$modificar,$ver,$extra);
		return $permisos;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_rol
	 * @param unknown_type $id_modulo
	 * @param unknown_type $id_proceso
	 * @return unknown
	 */
	function EliminaPermiso($id_rol,$id_modulo,$id_proceso)
	{
		$dbPermiso = new DBPermiso();
		$permisos = $dbPermiso -> EliminaPermiso($id_rol,$id_modulo,$id_proceso);
		return $permisos;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_rol
	 * @param unknown_type $id_proceso
	 * @param unknown_type $id_modulo
	 * @param unknown_type $insertar
	 * @param unknown_type $eliminar
	 * @param unknown_type $modificar
	 * @param unknown_type $ver
	 * @param unknown_type $extra
	 * @param unknown_type $pk_id_proceso
	 * @param unknown_type $pk_id_modulo
	 * @return unknown
	 */
	function   ModificaPermiso ($id_rol,$id_proceso,$id_modulo,$insertar,$eliminar,$modificar,$ver,$extra,$pk_id_proceso,$pk_id_modulo)
	{
		$dbPermiso = new DBPermiso();
		$permisos = $dbPermiso ->  ModificaPermiso ($id_rol,$id_proceso,$id_modulo,$insertar,$eliminar,$modificar,$ver,$extra,$pk_id_proceso,$pk_id_modulo);
		return $permisos;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_rol
	 * @return unknown
	 */
	function CuentaPermisosDelRol($id_rol)
	{
		$dbPermiso = new DBPermiso();
		$permisos = $dbPermiso ->  CuentaPermisosDelRol($id_rol);
		return $permisos;
	}
	////// FIN PERMISOSª///////////

	///////////////ROLES/////////////////////
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $nombre
	 * @param unknown_type $nivel
	 * @param unknown_type $obs
	 * @return unknown
	 */
	function CrearRol ($nombre,$nivel=0,$obs)
	{
		$dbRol = new DBRol();
		$res = $dbRol -> CrearRol ($nombre,$nivel,$obs);
		return $res;
	}
	/**
	 * Enter description here...
	 *
	 * @return unknown
	 */
	function CuentaListaPaginadaRol()
	{
		$dbRol = new DBRol();
		$res = $dbRol -> CuentaListaPaginadaRol();
		return $res;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @return unknown
	 */
	function ListaPaginadaRol($cant,$puntero)
	{
		$dbRol = new DBRol();
		$res = $dbRol -> ListaPaginadaRol($cant,$puntero);
		return $res;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_rol
	 * @return unknown
	 */
	function EliminaRol ($id_rol)
	{
		$dbRol = new DBRol();
		$res = $dbRol -> EliminaRol ($id_rol);
		return $res;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_rol
	 * @param unknown_type $nombre
	 * @param unknown_type $nivel
	 * @param unknown_type $obs
	 * @return unknown
	 */
	function ModificaRol($id_rol,$nombre,$nivel,$obs)
	{
		$dbRol = new DBRol();
		$res = $dbRol ->  ModificaRol($id_rol,$nombre,$nivel,$obs);
		return $res;
	}
	/**
	 * Enter description here...
	 *
	 * @return unknown
	 */
	function ListaRol()
	{
		$dbRol = new DBRol();
		$res = $dbRol -> ListaRol();
		return $res;
	}
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @param unknown_type $sortCol
	 * @param unknown_type $sortDir
	 * @param unknown_type $filterCol
	 * @param unknown_type $filterValue
	 * @return unknown
	 */
	function  ListaParametrizadaRol($cant=-1,$puntero=0,$sortCol="id",$sortDir="asc",$filterCol="nombre",$filterValue="")
	{
		$dbRol = new DBRol();
		$res = $dbRol -> ListaParametrizadaRol($cant,$puntero,$sortCol,$sortDir,$filterCol,$filterValue);
		return $res;
	}
	/////////////FIN ROLES /////////////////////////////

	/////////////// MODULOS /////////////////////
	/**
	 * Enter description here...
	 *
	 * @return unknown
	 */
	function ListaModulo()
	{
		$dbModulo = new DBModulo();
		$res = $dbModulo -> ListaModulo();
		return $res;
	}

	/////////////FIN MODULOS/////////////////////////////

	/////////////// PROCESO /////////////////////
	/**
	 * Enter description here...
	 *
	 * @return unknown
	 */
	function ListaProceso()
	{
		$dbProceso = new DBproceso();
		$res = $dbProceso -> ListaProceso();
		return $res;
	}

	/////////////   FIN  PROCESO  /////////////////////////////

	
	/////////////   PARAMETRO GENERAL /////////////////////////////
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @param unknown_type $sortcol
	 * @param unknown_type $sortdir
	 * @param unknown_type $criterio_filtro
	 * @param unknown_type $id_financiador
	 * @param unknown_type $id_regional
	 * @param unknown_type $id_programa
	 * @param unknown_type $id_proyecto
	 * @param unknown_type $id_actividad
	 * @return unknown
	 */
	function ListarParametroGeneral($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad)
	{
		$this->salida = "";
		$dbParametroGral= new cls_DBParametroGeneral($this->decodificar);
		$res = $dbParametroGral->ListarParametroGeneral($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad);
		$this->salida = $dbParametroGral->salida;
		$this->query = $dbParametroGral->query;
		return $res;
	}
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @param unknown_type $sortcol
	 * @param unknown_type $sortdir
	 * @param unknown_type $criterio_filtro
	 * @param unknown_type $id_financiador
	 * @param unknown_type $id_regional
	 * @param unknown_type $id_programa
	 * @param unknown_type $id_proyecto
	 * @param unknown_type $id_actividad
	 * @return unknown
	 */
	function ContarListaParametroGeneral($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad)
	{
		$this->salida = "";
		$dbParametroGral= new cls_DBParametroGeneral($this->decodificar);
		$res = $dbParametroGral->ContarListaParametroGeneral($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad);
		$this->salida = $dbParametroGral->salida;
		$this->query = $dbParametroGral->query;
		return $res;
	}
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_parametros_generales
	 * @param unknown_type $nombre_atributo
	 * @param unknown_type $valor_atributo
	 * @param unknown_type $descripcion
	 * @return unknown
	 */
	function CrearParametroGeneral($id_parametros_generales,$nombre_atributo,$valor_atributo,$descripcion)
	{
		$this->salida = "";
		$dbParametroGral = new cls_DBParametroGeneral($this->decodificar);
		$res = $dbParametroGral->CrearParametroGeneral($id_parametros_generales,$nombre_atributo,$valor_atributo,$descripcion);
		$this->salida = $dbParametroGral->salida;
		$this->query = $dbParametroGral->query;
		return $res;
	}
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_parametros_generales
	 * @return unknown
	 */
	function EliminarParametroGeneral($id_parametros_generales)
	{
		$this->salida = "";
		$dbParametroGral= new cls_DBParametroGeneral($this->decodificar);
		$res = $dbParametroGral -> EliminarParametroGeneral($id_parametros_generales);
		$this->salida = $dbParametroGral->salida;
		$this->query = $dbParametroGral->query;
		return $res;
	}
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_parametros_generales
	 * @param unknown_type $nombre_atributo
	 * @param unknown_type $valor_atributo
	 * @param unknown_type $descripcion
	 * @return unknown
	 */
	function ModificarParametroGeneral($id_parametros_generales,$nombre_atributo,$valor_atributo,$descripcion)
	{
		$this->salida = "";
		$dbParametroGral= new cls_DBParametroGeneral($this->decodificar);
		$res = $dbParametroGral->ModificarParametroGeneral($id_parametros_generales,$nombre_atributo,$valor_atributo,$descripcion);
		$this->salida = $dbParametroGral->salida;
		$this->query = $dbParametroGral->query;
		return $res;
	}
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $operacion_sql
	 * @param unknown_type $id_parametros_generales
	 * @param unknown_type $nombre_atributo
	 * @param unknown_type $valor_atributo
	 * @param unknown_type $descripcion
	 * @return unknown
	 */
	function ValidarParametroGeneral($operacion_sql, $id_parametros_generales,$nombre_atributo,$valor_atributo,$descripcion)
	{
		$this->salida = "";
		$dbParametroGral= new cls_DBParametroGeneral($this->decodificar);
		$res = $dbParametroGral ->ValidarParametroGeneral($operacion_sql, $id_parametros_generales,$nombre_atributo,$valor_atributo,$descripcion);
		$this->salida = $dbParametroGral->salida;
		$this->query = $dbParametroGral->query;
		return $res;
	}
	

	/////////////   FIN  PARAMETRO GENERAL /////////////////////////////
	
	
	
	////////////////////////////  USUARIO ROL ////////////////////////
	/**
	 * Nombre de la función:	ListarUsuarioRol
	 * Propósito:				Contar el total de registros desplegados en función de los parámetros de filtro
	 * Autor:					Anacleto Rojas Veizaga
	 * Fecha de creación:		30-08-2007
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @param unknown_type $sortcol
	 * @param unknown_type $sortdir
	 * @param unknown_type $criterio_filtro
	 * @param unknown_type $id_financiador
	 * @param unknown_type $id_regional
	 * @param unknown_type $id_programa
	 * @param unknown_type $id_proyecto
	 * @param unknown_type $id_actividad
	 * @return unknown
	 */
	function ListarUsuarioRol($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad)
	{
		$this->salida = "";
		$dbUsuarioRol = new cls_DBUsuarioRol($this->decodificar);
		$res = $dbUsuarioRol->ListarUsuarioRol($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad);
		$this->salida = $dbUsuarioRol->salida;
		$this->query = $dbUsuarioRol->query;
		return $res;
	}
	/**
	 * Nombre de la función:	ContarUsuarioRol
	 * Propósito:				Contar el total de registros desplegados en función de los parámetros de filtro
	 * Autor:					Anacleto Rojas Veizaga
	 * Fecha de creación:		30-08-2007
	 *
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @param unknown_type $sortcol
	 * @param unknown_type $sortdir
	 * @param unknown_type $criterio_filtro
	 * @param unknown_type $id_financiador
	 * @param unknown_type $id_regional
	 * @param unknown_type $id_programa
	 * @param unknown_type $id_proyecto
	 * @param unknown_type $id_actividad
	 * @return unknown
	 */
	function ContarUsuarioRol($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad)
	{
		$this->salida = "";
		$dbUsuarioRol = new cls_DBUsuarioRol($this->decodificar);
		$res = $dbUsuarioRol-> ContarUsuarioRol($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad);
		$this->salida = $dbUsuarioRol->salida;
		$this->query = $dbUsuarioRol->query;
		
		return $res;
	}	

	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_usuario_rol
	 * @param unknown_type $id_rol
	 * @param unknown_type $id_usuario
	 * @return unknown
	 */
	function InsertarUsuarioRol($id_usuario_rol,$id_rol,$id_usuario)
	{
		$this->salida = "";
		$dbUsuarioRol = new cls_DBMetaproceso($this->decodificar);
		$res = $dbUsuarioRol->InsertarUsuarioRol($id_usuario_rol,$id_rol,$id_usuario);
		$this->salida = $dbUsuarioRol->salida;
		$this->query = $dbUsuarioRol->query;
		return $res;
	}

	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_usuario_rol
	 * @param unknown_type $id_rol
	 * @param unknown_type $id_usuario
	 * @return unknown
	 */
	function ModificarUsuarioRol($id_usuario_rol,$id_rol,$id_usuario)
	{
		$this->salida = "";
		$dbUsuarioRol = new cls_DBUsuarioRol($this->decodificar);
		$res = $dbUsuarioRol->ModificarUsuarioRol($id_usuario_rol,$id_rol,$id_usuario);
		$this->salida = $dbUsuarioRol->salida;
		$this->query = $dbUsuarioRol->query;
		return $res;
	}
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $id_usuario_rol
	 * @return unknown
	 */
	function EliminarUsuarioRol($id_usuario_rol)
	{
		$this->salida = "";
		$dbUsuarioRol= new cls_DBUsuarioRol($this->decodificar);
		$res = $dbUsuarioRol->EliminarUsuarioRol($id_usuario_rol);
		$this->salida = $dbUsuarioRol->salida;
		$this->query = $dbUsuarioRol->query;
		return $res;
	}
	
	/**
	 * Enter description here...
	 *
	 * @param unknown_type $operacion_sql
	 * @param unknown_type $id_usuario_rol
	 * @param unknown_type $id_rol
	 * @param unknown_type $id_usuario
	 * @return unknown
	 */
	function ValidarUsuarioRol($operacion_sql,$id_usuario_rol,$id_rol,$id_usuario)
	{
		$this->salida = "";
		$dbUsuarioRol = new cls_DBMetaproceso($this->decodificar);
		$res = $dbUsuarioRol->ValidarUsuarioRol($operacion_sql,$id_usuario_rol,$id_rol,$id_usuario);
		$this->salida = $dbUsuarioRol->salida;
		$this->query = $dbUsuarioRol->query;
		return $res;
	}
	
	//////////////////////////// FIN USUARIO ROL ////////////////////////
	
	//////////////////////////// ASIGNACION ESTRUCTURA ////////////////////////
	/**
	 * Nombre de la función:	ListarAsignacionEstructura 
	 * Propósito:				Contar el total de registros desplegados en función de los parámetros de filtro
	 * Autor:					Anacleto Rojas Veizaga
	 * Fecha de creación:		03-09-2007
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @param unknown_type $sortcol
	 * @param unknown_type $sortdir
	 * @param unknown_type $criterio_filtro
	 * @param unknown_type $id_financiador
	 * @param unknown_type $id_regional
	 * @param unknown_type $id_programa
	 * @param unknown_type $id_proyecto
	 * @param unknown_type $id_actividad
	 * @return unknown
	 */
	function ListarAsignacionEstructura($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad)
	{
		$this->salida = "";
		$dbAsignacionEstructura = new cls_DBAsignacionEstructura($this->decodificar);
		$res = $dbAsignacionEstructura->ListarAsignacionEstructura($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad);
		$this->salida = $dbAsignacionEstructura->salida;
		$this->query = $dbAsignacionEstructura->query;
		return $res;
	}
	
	/**
	 * Nombre de la función:	ContarAsignacionEstructura
	 * Propósito:				Contar el total de registros desplegados en función de los parámetros de filtro
	 * Autor:					Anacleto Rojas Veizaga
	 * Fecha de creación:		03-09-2007
	 *
	 *
	 * @param unknown_type $cant
	 * @param unknown_type $puntero
	 * @param unknown_type $sortcol
	 * @param unknown_type $sortdir
	 * @param unknown_type $criterio_filtro
	 * @param unknown_type $id_financiador
	 * @param unknown_type $id_regional
	 * @param unknown_type $id_programa
	 * @param unknown_type $id_proyecto
	 * @param unknown_type $id_actividad
	 * @return unknown
	 */
	function ContarAsignacionEstructura($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad)
	{
		$this->salida = "";
		$dbAsignacionEstructura = new cls_DBAsignacionEstructura($this->decodificar);
		$res = $dbAsignacionEstructura-> ContarAsignacionEstructura($cant,$puntero,$sortcol,$sortdir,$criterio_filtro,$id_financiador,$id_regional,$id_programa,$id_proyecto,$id_actividad);
		$this->salida = $dbAsignacionEstructura->salida;
		$this->query = $dbAsignacionEstructura->query;
		
		return $res;
	}	

	/**
	 * Nombre de la función:	InsertarAsignacionEstructura
	 * Propósito:				Contar el total de registros desplegados en función de los parámetros de filtro
	 * Autor:					Anacleto Rojas Veizaga
	 * Fecha de creación:		03-09-2007
	 *
	
	 */
	function InsertarAsignacionEstructura($id_asignacion_estructura,$nombre,$descripcion,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modificacion,$validar_estructura)
	{
		$this->salida = "";
		$dbAsignacionEstructura = new cls_DBAsignacionEstructura($this->decodificar);
		$res = $dbAsignacionEstructura->InsertarAsignacionEstructura($id_asignacion_estructura,$nombre,$descripcion,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modificacion,$validar_estructura);
		$this->salida = $dbAsignacionEstructura->salida;
		$this->query = $dbAsignacionEstructura->query;
		return $res;
	}
	
	/**
	 * Nombre de la función:	ModificarAsignacionEstructura
	 * Propósito:				Modificar registros desplegados en función de los parámetros de filtro
	 * Autor:					Anacleto Rojas veizaga
	 * Fecha de creación:		03-09-2007
	 *
	 * @param unknown_type $id_asignacion_estructura
	 * @param unknown_type $nombre
	 * @param unknown_type $descripcion
	 * @param unknown_type $fecha_registro
	 * @param unknown_type $hora_registro
	 * @param unknown_type $fecha_ultima_modificacion
	 * @param unknown_type $hora_ultima_modificacion
	 * @param unknown_type $validar_estructura
	 * @return unknown
	 */
	function ModificarAsignacionEstructura($id_asignacion_estructura,$nombre,$descripcion,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modificacion,$validar_estructura)
	{
		$this->salida = "";
		$dbAsignacionEstructura = new cls_DBAsignacionEstructura($this->decodificar);
		$res = $dbAsignacionEstructura->ModificarAsignacionEstructura($id_asignacion_estructura,$nombre,$descripcion,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modificacion,$validar_estructura);
		$this->salida = $dbAsignacionEstructura->salida;
		$this->query = $dbAsignacionEstructura->query;
		return $res;
	}
	
	/**
	 * Nombre de la función:	eliminarAsignacionEstructura
	 * Propósito:				Contar el total de registros desplegados en función de los parámetros de filtro
	 * Autor:					Anacleto Rojas Veizaga
	 * Fecha de creación:		03-09-2007
	 * @param unknown_type $id_asignacion_estructura
	 * @return unknown
	 */
	function EliminarAsignacionEstructura($id_asignacion_estructura)
	{
		$this->salida = "";
		$dbAsignacionEstructura= new cls_DBAsignacionEstructura($this->decodificar);
		$res = $dbAsignacionEstructura->EliminarAsignacionEstructura($id_asignacion_estructura);
		$this->salida = $dbAsignacionEstructura->salida;
		$this->query = $dbAsignacionEstructura->query;
		return $res;
	}
	
	/**
	 * Nombre de la función:	ValidarAsignacionEstructura
	 * Propósito:				Contar el total de registros desplegados en función de los parámetros de filtro
	 * Autor:					Anacleto Rojas Veizaga
	 * Fecha de creación:		03-09-2007
	
	 * @param unknown_type $operacion_sql
	 * @param unknown_type $id_asignacion_estructura
	 * @param unknown_type $nombre
	 * @param unknown_type $descripcion
	 * @param unknown_type $fecha_registro
	 * @param unknown_type $hora_registro
	 * @param unknown_type $fecha_ultima_modificacion
	 * @param unknown_type $hora_ultima_modificacion
	 * @param unknown_type $validar_estructura
	 * @return unknown
	 */
	function ValidarAsignacionEstructura($operacion_sql,$id_asignacion_estructura, $nombre,$descripcion,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modificacion,$validar_estructura)
	{
		
		$this->salida = "";
		$dbAsignacionEstructura = new cls_DBAsignacionEstructura($this->decodificar);
		$res = $dbAsignacionEstructura->ValidarAsignacionEstructura($operacion_sql,$id_asignacion_estructura, $nombre,$descripcion,$fecha_registro,$hora_registro,$fecha_ultima_modificacion,$hora_ultima_modificacion,$validar_estructura);
		$this->salida = $dbAsignacionEstructura->salida;
		$this->query = $dbAsignacionEstructura->query;
		return $res;
	}
	
	////////////////////////////  	FIN ASIGNACION ESTRUCTURA ////////////////////////
	
}//fin custom 

?>